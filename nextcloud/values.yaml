ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: cert-manager-webhook-duckdns-${environment}
    nginx.ingress.kubernetes.io/proxy-body-size: 32M
    nginx.ingress.kubernetes.io/server-snippet: |-
      location = /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
      }
  tls:
    - secretName: nextcloud-tls
      hosts:
        - ${nextcloud_domain}

lifecycle:
  postStartCommand: [ "/bin/sh", "-c", "echo \"ServerName ${ip_address}\" | tee -a /etc/apache2/apache2.conf" ] # && echo \"LogLevel debug\" | tee -a /etc/apache2/apache2.conf" ]

nextcloud:
  host: ${nextcloud_domain}

  # securityContext:
  #   runAsGroup: 33
  #   runAsUser: 33
  #   runAsNonRoot: true
  #   readOnlyRootFilesystem: false

  # podSecurityContext:
  #   fsGroup: 33

  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: nextcloud-username
    passwordKey: nextcloud-password

  configs:
    custom.config.php: |-
      <?php
      $CONFIG = array (
        'encryption.legacy_format_support' => false,
        'default_phone_region' => 'DE',
        'overwritehost' => '${nextcloud_domain}',
        'overwriteprotocol' => 'https',
        'trusted_proxies' =>
        array (
          0 => '${nextcloud_proxies}',
        ),
        'overwrite.cli.url' => 'https://localhost',
        'mail_smtpdebug' => false,
        'mail_from_address' => '${mail_fromaddress}',
        'mail_smtpmode' => 'smtp',
        'mail_sendmailmode' => 'smtp',
        'mail_domain' => '${mail_domain}',
        'mail_smtphost' => '${smtp_host}',
        'mail_smtpport' => '${smtp_port}',
        'mail_smtpauth' => 1,
        'mail_smtpname' => '${smtp_username}',
        'mail_smtppassword' => '${smtp_password}',
      );
    # logging.config.php: |-
    #   <?php
    #   $CONFIG = array (
    #     'log_type' => 'file',
    #     'logfile' => 'nextcloud.log',
    #     'loglevel' => 0,
    #     'logdateformat' => 'F d, Y H:i:s'
    #   );

  extraEnv:
    - name: OVERWRITEHOST
      value: ${nextcloud_domain}
    - name: TRUSTED_PROXIES
      value: ${nextcloud_proxies}
    - name: OVERWRITECLIURL
      value: https://localhost

  # mail:
  #   enabled: true
  #   fromAddress: ${mail_fromaddress}
  #   domain: ${mail_domain}
  #   smtp:
  #     host: ${smtp_host}
  #     port: ${smtp_port}

phpClientHttpsFix:
  enabled: true
  protocol: https

cronjob:
  enabled: true

internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  type: postgresql
  host: nextcloud-postgresql.nextcloud.svc.cluster.local:5432
  database: ${postgresql_postgresqldatabase}
  user: ${postgresql_postgresqlusername}
  password: ${postgresql_postgresqlpassword}

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        database: ${postgresql_postgresqldatabase}
        username: ${postgresql_postgresqlusername}
        password: ${postgresql_postgresqlpassword}
  # image:
  #   repository: postgres
  #   # check version here: 
  #   # - https://github.com/nextcloud/helm/blob/master/charts/nextcloud/Chart.yaml
  #   # - https://github.com/bitnami/charts/blob/master/bitnami/postgresql/Chart.yaml
  #   # - https://hub.docker.com/_/postgres?tab=tags
  #   tag: 16.3
  #   pullPolicy: IfNotPresent
  primary:
    persistence:
      enabled: true
      existingClaim: nextcloud-postgresql-pvc
    extraVolumes:
      - name: backup
        persistentVolumeClaim:
          claimName: nextcloud-backup-pvc
    extraVolumeMounts:
      - name: backup
        mountPath: /backup

# service:
#   annotations:
#     "lbipam.cilium.io/ips": "${ip_address}"
#   type: LoadBalancer
#   port: 8080
#   # loadBalancerIP: ${ip_address}

persistence:
  enabled: true
  existingClaim: nextcloud-server-pvc
  accessMode: ReadWriteOnce
  size: 8Gi

livenessProbe:
  initialDelaySeconds: 240

readinessProbe:
  initialDelaySeconds: 240
